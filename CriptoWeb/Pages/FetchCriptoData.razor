@page "/usdt"
@using DataAccess
@using Models
@using System.Globalization
@inject ExchangesAccess ExchangesAccess

<PageTitle>USDT ahora</PageTitle>

<h1>Cripto</h1>


@if (exchanges == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Exchange</th>
            <th>Date</th>
            <th>Comprar USDT</th>
            <th>Vender USDT</th>
            <th>x1400</th>
            <th>Vender USDT + Cashback</th>
        </tr>
        </thead>
        <tbody>

        @foreach (var data in exchanges)
        {
            <tr>
                <td>@data.exchange</td>
                <td>@data.fecha</td>
                <td>@data.comprar_USDT.ToString("C", culture)</td>
                <td>@data.vender_USDT.ToString("C", culture)</td>
                <td>@(data.vender_USDT * 1400)</td>
                @switch (data.exchange)
                {
                    case "Belo":
                        <td>@((data.vender_USDT * 1.02).ToString("C", culture)) (2%)</td>
                        break;
                    case "Buenbit":
                        <td>@((data.vender_USDT * 1.01).ToString("C", culture)) (1% hasta ARS$50.000/mes)</td>
                        break;
                    case "Letsbit":
                        <td>@((data.vender_USDT * 1.025).ToString("C", culture)) (2.5% hasta ARS$40.000/mes)</td>
                        break;
                    case "Fiwind":
                        <td>@((data.vender_USDT * 1).ToString("C", culture)) (0%)</td>
                        break;
                    default:
                        <td></td>
                        break;
                }
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<CriptoBase>? exchanges;

    protected override async Task OnInitializedAsync()
    {
        exchanges = await ExchangesAccess.GetUSDTExchanges();
    }

    readonly CultureInfo culture = new("en-US");
}